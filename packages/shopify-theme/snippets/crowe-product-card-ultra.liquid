{%- comment -%}
üöÄ Crowe Logic‚Ñ¢ Ultra Product Card - Maximum Conversion Design
Advanced animations, smart interactions, and psychological triggers
{%- endcomment -%}

{%- liquid
  assign product_card_product = product_card_product | default: product
  assign media_aspect_ratio = media_aspect_ratio | default: 1
  assign media_size = media_size | default: 'square'
  assign show_secondary_image = show_secondary_image | default: false
  assign show_vendor = show_vendor | default: false
  assign show_rating = show_rating | default: false
  assign extend_height = extend_height | default: false
  assign lazy_load = lazy_load | default: true
  assign quick_add = quick_add | default: 'none'
  assign section_id = section_id | default: 'template'
  assign horizontal_class = horizontal_class | default: false
  assign horizontal_quick_add = horizontal_quick_add | default: false
  assign placeholder_image = placeholder_image | default: 'product-apparel-2'
  
  assign ratio = 1
  if media_aspect_ratio != null
    assign ratio = media_aspect_ratio
  endif
-%}

<style>
/* üéØ Ultra Product Card - Conversion Optimized */
.crowe-product-card-ultra {
  position: relative;
  background: linear-gradient(135deg, 
    rgba(244, 244, 242, 0.95) 0%,
    rgba(244, 244, 242, 0.98) 100%
  );
  border-radius: 24px;
  overflow: hidden;
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.08),
    0 0 40px rgba(198, 163, 81, 0.05);
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  cursor: pointer;
  border: 1px solid rgba(198, 163, 81, 0.1);
  backdrop-filter: blur(10px);
}

.crowe-product-card-ultra:hover {
  transform: translateY(-12px) scale(1.02);
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.15),
    0 0 60px rgba(198, 163, 81, 0.15);
  border-color: rgba(198, 163, 81, 0.3);
}

.crowe-product-card-ultra::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, 
    rgba(198, 163, 81, 0.02) 0%,
    transparent 50%,
    rgba(201, 184, 138, 0.02) 100%
  );
  opacity: 0;
  transition: opacity 0.4s ease;
  z-index: 1;
}

.crowe-product-card-ultra:hover::before {
  opacity: 1;
}

/* üñºÔ∏è Enhanced Media Container */
.card-media-container {
  position: relative;
  overflow: hidden;
  border-radius: 20px 20px 0 0;
}

.card-media-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(0, 0, 0, 0.1) 100%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 2;
}

.crowe-product-card-ultra:hover .card-media-overlay {
  opacity: 1;
}

.card-media {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  filter: contrast(1.1) saturate(1.1);
}

.crowe-product-card-ultra:hover .card-media {
  transform: scale(1.08);
  filter: contrast(1.2) saturate(1.2) brightness(1.05);
}

/* üè∑Ô∏è Smart Badges System */
.card-badges {
  position: absolute;
  top: 16px;
  left: 16px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  z-index: 3;
}

.card-badge {
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 11px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  animation: fadeInScale 0.6s ease-out;
}

.card-badge--new {
  background: linear-gradient(135deg, 
    rgba(34, 197, 94, 0.9) 0%,
    rgba(21, 128, 61, 0.8) 100%
  );
  color: white;
  border: 1px solid rgba(34, 197, 94, 0.3);
}

.card-badge--sale {
  background: linear-gradient(135deg, 
    rgba(239, 68, 68, 0.9) 0%,
    rgba(185, 28, 28, 0.8) 100%
  );
  color: white;
  border: 1px solid rgba(239, 68, 68, 0.3);
}

.card-badge--featured {
  background: linear-gradient(135deg, 
    rgba(198, 163, 81, 0.9) 0%,
    rgba(201, 184, 138, 0.8) 100%
  );
  color: var(--clr-bg-dark);
  border: 1px solid rgba(198, 163, 81, 0.3);
}

.card-badge--low-stock {
  background: linear-gradient(135deg, 
    rgba(245, 101, 101, 0.9) 0%,
    rgba(229, 62, 62, 0.8) 100%
  );
  color: white;
  border: 1px solid rgba(245, 101, 101, 0.3);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* üé¨ Quick Actions Overlay */
.card-quick-actions {
  position: absolute;
  top: 16px;
  right: 16px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  opacity: 0;
  transform: translateX(10px);
  transition: all 0.3s ease;
  z-index: 3;
}

.crowe-product-card-ultra:hover .card-quick-actions {
  opacity: 1;
  transform: translateX(0);
}

.quick-action-btn {
  width: 44px;
  height: 44px;
  border-radius: 50%;
  border: 1px solid rgba(198, 163, 81, 0.3);
  background: rgba(244, 244, 242, 0.9);
  backdrop-filter: blur(10px);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.quick-action-btn:hover {
  background: rgba(198, 163, 81, 0.9);
  color: var(--clr-bg-dark);
  transform: scale(1.1);
  box-shadow: 0 6px 20px rgba(198, 163, 81, 0.3);
}

.quick-action-btn svg {
  width: 18px;
  height: 18px;
  stroke-width: 2;
}

/* üìä Stock Indicator */
.stock-indicator {
  position: absolute;
  bottom: 16px;
  left: 16px;
  right: 16px;
  z-index: 3;
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
}

.crowe-product-card-ultra:hover .stock-indicator {
  opacity: 1;
  transform: translateY(0);
}

.stock-bar {
  height: 4px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  overflow: hidden;
  margin-bottom: 8px;
}

.stock-fill {
  height: 100%;
  border-radius: 2px;
  transition: width 0.5s ease;
}

.stock-fill--high {
  background: linear-gradient(90deg, 
    rgba(34, 197, 94, 0.8) 0%,
    rgba(21, 128, 61, 0.9) 100%
  );
}

.stock-fill--medium {
  background: linear-gradient(90deg, 
    rgba(245, 158, 11, 0.8) 0%,
    rgba(217, 119, 6, 0.9) 100%
  );
}

.stock-fill--low {
  background: linear-gradient(90deg, 
    rgba(239, 68, 68, 0.8) 0%,
    rgba(185, 28, 28, 0.9) 100%
  );
}

.stock-text {
  font-size: 11px;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.6);
  text-align: center;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
}

/* üìù Enhanced Content Area */
.card-content {
  padding: 24px;
  position: relative;
  z-index: 2;
}

.card-vendor {
  font-size: 12px;
  font-weight: 600;
  color: rgba(198, 163, 81, 0.8);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 8px;
}

.card-title {
  font-size: 18px;
  font-weight: 700;
  color: var(--clr-bg-dark);
  margin-bottom: 12px;
  line-height: 1.3;
  transition: color 0.3s ease;
}

.crowe-product-card-ultra:hover .card-title {
  color: var(--clr-accent);
}

.card-price-wrapper {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 16px;
}

.card-price {
  font-size: 20px;
  font-weight: 700;
  color: var(--clr-accent);
}

.card-price-compare {
  font-size: 16px;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.4);
  text-decoration: line-through;
}

.card-price-save {
  font-size: 12px;
  font-weight: 600;
  color: rgba(239, 68, 68, 0.8);
  background: rgba(239, 68, 68, 0.1);
  padding: 4px 8px;
  border-radius: 12px;
}

/* üî¨ Metafield Specs */
.card-specs {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 8px;
  margin-bottom: 16px;
}

.card-spec {
  background: rgba(198, 163, 81, 0.05);
  border: 1px solid rgba(198, 163, 81, 0.1);
  border-radius: 8px;
  padding: 8px;
  text-align: center;
  transition: all 0.3s ease;
}

.card-spec:hover {
  background: rgba(198, 163, 81, 0.1);
  border-color: rgba(198, 163, 81, 0.2);
}

.card-spec-label {
  font-size: 10px;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.6);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 2px;
}

.card-spec-value {
  font-size: 12px;
  font-weight: 700;
  color: var(--clr-accent);
}

/* üõí Enhanced CTA Button */
.card-cta {
  width: 100%;
  padding: 14px 24px;
  border: 2px solid var(--clr-accent);
  border-radius: 16px;
  background: transparent;
  color: var(--clr-accent);
  font-size: 14px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.card-cta::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent,
    rgba(198, 163, 81, 0.3),
    transparent
  );
  transition: left 0.5s ease;
}

.card-cta:hover::before {
  left: 100%;
}

.card-cta:hover {
  background: var(--clr-accent);
  color: var(--clr-bg-dark);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(198, 163, 81, 0.3);
}

/* üì± Mobile Optimizations */
@media (max-width: 768px) {
  .crowe-product-card-ultra:hover {
    transform: translateY(-6px) scale(1.01);
  }
  
  .card-content {
    padding: 20px;
  }
  
  .card-title {
    font-size: 16px;
  }
  
  .card-price {
    font-size: 18px;
  }
  
  .card-specs {
    grid-template-columns: 1fr;
  }
}

/* üé® Loading States */
.card-loading {
  position: relative;
  overflow: hidden;
}

.card-loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent,
    rgba(198, 163, 81, 0.1),
    transparent
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}
</style>

<div class="crowe-product-card-ultra" data-product-id="{{ product_card_product.id }}">
  <!-- Media Container -->
  <div class="card-media-container">
    <div class="card-media-overlay"></div>
    
    <!-- Media -->
    {%- if product_card_product.featured_media -%}
      <img 
        src="{{ product_card_product.featured_media | image_url: width: 600 }}"
        alt="{{ product_card_product.featured_media.alt | escape }}"
        class="card-media"
        loading="{%- if lazy_load -%}lazy{%- else -%}eager{%- endif -%}"
        width="600"
        height="600"
      />
    {%- else -%}
      <div class="card-media" style="background: linear-gradient(135deg, rgba(198, 163, 81, 0.1), rgba(201, 184, 138, 0.1)); display: flex; align-items: center; justify-content: center; color: var(--clr-accent); font-size: 48px;">
        üçÑ
      </div>
    {%- endif -%}
    
    <!-- Smart Badges -->
    <div class="card-badges">
      {%- if product_card_product.available == false -%}
        <span class="card-badge card-badge--sold-out">Sold Out</span>
      {%- endif -%}
      
      {%- if product_card_product.compare_at_price > product_card_product.price -%}
        <span class="card-badge card-badge--sale">Sale</span>
      {%- endif -%}
      
      {%- if product_card_product.tags contains 'new' -%}
        <span class="card-badge card-badge--new">New</span>
      {%- endif -%}
      
      {%- if product_card_product.tags contains 'featured' -%}
        <span class="card-badge card-badge--featured">Featured</span>
      {%- endif -%}
      
      {%- assign inventory_quantity = product_card_product.selected_or_first_available_variant.inventory_quantity -%}
      {%- if inventory_quantity <= 5 and inventory_quantity > 0 -%}
        <span class="card-badge card-badge--low-stock">Only {{ inventory_quantity }} Left</span>
      {%- endif -%}
    </div>
    
    <!-- Quick Actions -->
    <div class="card-quick-actions">
      <button class="quick-action-btn" onclick="addToWishlist('{{ product_card_product.id }}')" title="Add to Wishlist">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
        </svg>
      </button>
      
      <button class="quick-action-btn" onclick="quickView('{{ product_card_product.id }}')" title="Quick View">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
          <circle cx="12" cy="12" r="3"></circle>
        </svg>
      </button>
      
      <button class="quick-action-btn" onclick="shareProduct('{{ product_card_product.url }}')" title="Share">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
          <polyline points="16,6 12,2 8,6"></polyline>
          <line x1="12" y1="2" x2="12" y2="15"></line>
        </svg>
      </button>
    </div>
    
    <!-- Stock Indicator -->
    {%- if product_card_product.available -%}
      <div class="stock-indicator">
        <div class="stock-bar">
          {%- assign stock_percentage = inventory_quantity | divided_by: 20.0 | times: 100 | round -%}
          {%- if stock_percentage > 100 -%}
            {%- assign stock_percentage = 100 -%}
          {%- endif -%}
          
          <div class="stock-fill {% if stock_percentage > 60 %}stock-fill--high{% elsif stock_percentage > 30 %}stock-fill--medium{% else %}stock-fill--low{% endif %}" 
               style="width: {{ stock_percentage }}%"></div>
        </div>
        <div class="stock-text">
          {%- if inventory_quantity > 10 -%}
            In Stock
          {%- elsif inventory_quantity > 0 -%}
            Only {{ inventory_quantity }} Left
          {%- else -%}
            Low Stock
          {%- endif -%}
        </div>
      </div>
    {%- endif -%}
  </div>
  
  <!-- Content -->
  <div class="card-content">
    {%- if show_vendor and product_card_product.vendor != blank -%}
      <div class="card-vendor">{{ product_card_product.vendor }}</div>
    {%- endif -%}
    
    <h3 class="card-title">
      <a href="{{ product_card_product.url }}">{{ product_card_product.title | escape }}</a>
    </h3>
    
    <!-- Price -->
    <div class="card-price-wrapper">
      <span class="card-price">{{ product_card_product.price | money }}</span>
      {%- if product_card_product.compare_at_price > product_card_product.price -%}
        <span class="card-price-compare">{{ product_card_product.compare_at_price | money }}</span>
        {%- assign savings = product_card_product.compare_at_price | minus: product_card_product.price -%}
        <span class="card-price-save">Save {{ savings | money }}</span>
      {%- endif -%}
    </div>
    
    <!-- Metafield Specs -->
    {%- if product_card_product.metafields.custom.difficulty or product_card_product.metafields.custom.yield_estimate or product_card_product.metafields.custom.growth_time or product_card_product.metafields.custom.temperature -%}
      <div class="card-specs">
        {%- if product_card_product.metafields.custom.difficulty -%}
          <div class="card-spec">
            <div class="card-spec-label">Difficulty</div>
            <div class="card-spec-value">{{ product_card_product.metafields.custom.difficulty.value }}</div>
          </div>
        {%- endif -%}
        
        {%- if product_card_product.metafields.custom.yield_estimate -%}
          <div class="card-spec">
            <div class="card-spec-label">Yield</div>
            <div class="card-spec-value">{{ product_card_product.metafields.custom.yield_estimate.value }}</div>
          </div>
        {%- endif -%}
        
        {%- if product_card_product.metafields.custom.growth_time -%}
          <div class="card-spec">
            <div class="card-spec-label">Growth Time</div>
            <div class="card-spec-value">{{ product_card_product.metafields.custom.growth_time.value }}</div>
          </div>
        {%- endif -%}
        
        {%- if product_card_product.metafields.custom.temperature -%}
          <div class="card-spec">
            <div class="card-spec-label">Temperature</div>
            <div class="card-spec-value">{{ product_card_product.metafields.custom.temperature.value }}</div>
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
    
    <!-- CTA Button -->
    <button class="card-cta" onclick="addToCart('{{ product_card_product.selected_or_first_available_variant.id }}', 1)">
      {%- if product_card_product.available -%}
        Add to Cart
      {%- else -%}
        Sold Out
      {%- endif -%}
    </button>
  </div>
</div>

<script>
// üéØ Ultra Product Card JavaScript
document.addEventListener('DOMContentLoaded', function() {
  // Add to cart functionality
  window.addToCart = function(variantId, quantity) {
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        id: variantId,
        quantity: quantity
      })
    })
    .then(response => response.json())
    .then(data => {
      // Success animation
      showNotification('Added to cart!', 'success');
      updateCartCount();
    })
    .catch(error => {
      showNotification('Error adding to cart', 'error');
    });
  };
  
  // Wishlist functionality
  window.addToWishlist = function(productId) {
    let wishlist = JSON.parse(localStorage.getItem('crowe_wishlist') || '[]');
    if (!wishlist.includes(productId)) {
      wishlist.push(productId);
      localStorage.setItem('crowe_wishlist', JSON.stringify(wishlist));
      showNotification('Added to wishlist!', 'success');
    } else {
      showNotification('Already in wishlist', 'info');
    }
  };
  
  // Quick view functionality
  window.quickView = function(productId) {
    // Implement quick view modal
    console.log('Quick view for product:', productId);
  };
  
  // Share functionality
  window.shareProduct = function(productUrl) {
    if (navigator.share) {
      navigator.share({
        title: 'Check out this product',
        url: productUrl
      });
    } else {
      // Fallback to copying URL
      navigator.clipboard.writeText(window.location.origin + productUrl);
      showNotification('Product link copied!', 'success');
    }
  };
  
  // Notification system
  function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `crowe-notification crowe-notification--${type}`;
    notification.textContent = message;
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 12px 24px;
      border-radius: 8px;
      color: white;
      font-weight: 600;
      z-index: 9999;
      opacity: 0;
      transform: translateY(-10px);
      transition: all 0.3s ease;
    `;
    
    if (type === 'success') {
      notification.style.background = 'linear-gradient(135deg, rgba(34, 197, 94, 0.9), rgba(21, 128, 61, 0.9))';
    } else if (type === 'error') {
      notification.style.background = 'linear-gradient(135deg, rgba(239, 68, 68, 0.9), rgba(185, 28, 28, 0.9))';
    } else {
      notification.style.background = 'linear-gradient(135deg, rgba(59, 130, 246, 0.9), rgba(37, 99, 235, 0.9))';
    }
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.style.opacity = '1';
      notification.style.transform = 'translateY(0)';
    }, 10);
    
    setTimeout(() => {
      notification.style.opacity = '0';
      notification.style.transform = 'translateY(-10px)';
      setTimeout(() => {
        document.body.removeChild(notification);
      }, 300);
    }, 3000);
  }
  
  // Update cart count
  function updateCartCount() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        const cartCount = document.querySelector('.cart-count');
        if (cartCount) {
          cartCount.textContent = cart.item_count;
        }
      });
  }
  
  // Intersection Observer for animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.style.animationDelay = Math.random() * 0.5 + 's';
        entry.target.classList.add('animate-fade-in');
      }
    });
  });
  
  document.querySelectorAll('.crowe-product-card-ultra').forEach(card => {
    observer.observe(card);
  });
});
</script>

{%- style -%}
  .ai-personalization {
    padding: 4rem 0;
    background: linear-gradient(180deg, #0a0a0a 0%, #1a1a1a 100%);
    position: relative;
    overflow: hidden;
  }

  .ai-neural-network {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    pointer-events: none;
  }

  .ai-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
    position: relative;
    z-index: 1;
  }

  .ai-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .ai-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 900;
    background: linear-gradient(90deg, #D4AF37, #FFF5DC, #D4AF37);
    background-size: 200% 100%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: ai-gradient 3s linear infinite;
    margin-bottom: 1rem;
  }

  @keyframes ai-gradient {
    0% { background-position: 0% 50%; }
    100% { background-position: 200% 50%; }
  }

  .ai-subtitle {
    color: rgba(255, 255, 255, 0.8);
    font-size: 1.3rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .ai-dashboard {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
    margin-bottom: 4rem;
  }

  .ai-profile {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid rgba(212, 175, 55, 0.2);
  }

  .ai-avatar {
    width: 120px;
    height: 120px;
    margin: 0 auto 1.5rem;
    border-radius: 50%;
    background: radial-gradient(circle, #D4AF37, #B8943F);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    position: relative;
    overflow: hidden;
  }

  .ai-avatar::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, transparent 30%, rgba(255, 255, 255, 0.1) 70%);
    animation: ai-pulse-ring 2s ease-out infinite;
  }

  @keyframes ai-pulse-ring {
    0% { transform: scale(0.5); opacity: 1; }
    100% { transform: scale(1.5); opacity: 0; }
  }

  .ai-username {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 700;
    color: #FFF5DC;
    margin-bottom: 0.5rem;
  }

  .ai-stats {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
  }

  .ai-stat-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 10px;
  }

  .ai-stat-label {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
  }

  .ai-stat-value {
    color: #D4AF37;
    font-weight: 700;
  }

  .ai-recommendations {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid rgba(212, 175, 55, 0.2);
  }

  .ai-rec-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .ai-rec-title {
    font-size: 1.8rem;
    font-weight: 700;
    color: #FFF5DC;
  }

  .ai-confidence {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: rgba(212, 175, 55, 0.1);
    border-radius: 20px;
    color: #D4AF37;
    font-size: 0.9rem;
  }

  .ai-confidence-bar {
    width: 60px;
    height: 6px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
    overflow: hidden;
  }

  .ai-confidence-fill {
    height: 100%;
    background: #D4AF37;
    width: var(--confidence, 0%);
    transition: width 1s ease-out;
  }

  .ai-product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .ai-product-card {
    background: rgba(255, 255, 255, 0.02);
    border-radius: 15px;
    overflow: hidden;
    transition: all 0.3s;
    position: relative;
    cursor: pointer;
  }

  .ai-product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(212, 175, 55, 0.2);
  }

  .ai-product-image {
    height: 200px;
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.1), rgba(212, 175, 55, 0.05));
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4rem;
    position: relative;
    overflow: hidden;
  }

  .ai-match-score {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: #0a0a0a;
    color: #D4AF37;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 700;
    font-size: 0.9rem;
    border: 1px solid #D4AF37;
  }

  .ai-product-details {
    padding: 1.5rem;
  }

  .ai-product-name {
    font-size: 1.2rem;
    font-weight: 700;
    color: #FFF5DC;
    margin-bottom: 0.5rem;
  }

  .ai-product-reason {
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
    line-height: 1.4;
    margin-bottom: 1rem;
  }

  .ai-product-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .ai-tag {
    padding: 0.25rem 0.75rem;
    background: rgba(212, 175, 55, 0.1);
    border-radius: 15px;
    color: #D4AF37;
    font-size: 0.8rem;
    font-weight: 600;
  }

  .ai-insights {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .ai-insight-card {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 20px;
    padding: 2rem;
    border: 1px solid rgba(212, 175, 55, 0.2);
    text-align: center;
  }

  .ai-insight-icon {
    width: 60px;
    height: 60px;
    margin: 0 auto 1rem;
    background: rgba(212, 175, 55, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #D4AF37;
    font-size: 1.5rem;
  }

  .ai-insight-title {
    font-size: 1.3rem;
    font-weight: 700;
    color: #FFF5DC;
    margin-bottom: 0.5rem;
  }

  .ai-insight-value {
    font-size: 2.5rem;
    font-weight: 900;
    color: #D4AF37;
    margin-bottom: 0.5rem;
  }

  .ai-insight-desc {
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .ai-dashboard {
      grid-template-columns: 1fr;
    }

    .ai-profile {
      text-align: center;
    }

    .ai-product-grid {
      grid-template-columns: 1fr;
    }
  }
{%- endstyle -%}

<section class="ai-personalization" data-section-id="{{ section.id }}">
  <canvas class="ai-neural-network" id="neural-{{ section.id }}"></canvas>
  
  <div class="ai-container">
    <div class="ai-header">
      <h2 class="ai-title">{{ section.settings.title | default: 'AI-Powered Shopping Experience' }}</h2>
      <p class="ai-subtitle">{{ section.settings.subtitle | default: 'Your personal AI analyzes preferences to curate the perfect products' }}</p>
    </div>

    <div class="ai-dashboard">
      <div class="ai-profile">
        <div class="ai-avatar">
          <span>üß†</span>
        </div>
        <h3 class="ai-username">{{ customer.name | default: 'Guest User' }}</h3>
        
        <div class="ai-stats">
          <div class="ai-stat-item">
            <span class="ai-stat-label">Profile Match</span>
            <span class="ai-stat-value">98%</span>
          </div>
          <div class="ai-stat-item">
            <span class="ai-stat-label">Products Analyzed</span>
            <span class="ai-stat-value">1,247</span>
          </div>
          <div class="ai-stat-item">
            <span class="ai-stat-label">Accuracy Score</span>
            <span class="ai-stat-value">99.8%</span>
          </div>
          <div class="ai-stat-item">
            <span class="ai-stat-label">Time Saved</span>
            <span class="ai-stat-value">4.2 hrs</span>
          </div>
        </div>
      </div>

      <div class="ai-recommendations">
        <div class="ai-rec-header">
          <h3 class="ai-rec-title">AI Recommendations</h3>
          <div class="ai-confidence">
            <span>Confidence</span>
            <div class="ai-confidence-bar">
              <div class="ai-confidence-fill" style="--confidence: 96%"></div>
            </div>
            <span>96%</span>
          </div>
        </div>

        <div class="ai-product-grid">
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'ai_product' %}
                <div class="ai-product-card" {{ block.shopify_attributes }}>
                  <div class="ai-product-image">
                    <span>{{ block.settings.product_emoji | default: 'üçÑ' }}</span>
                    <div class="ai-match-score">{{ block.settings.match_score }}% Match</div>
                  </div>
                  
                  <div class="ai-product-details">
                    <h4 class="ai-product-name">{{ block.settings.product_name }}</h4>
                    <p class="ai-product-reason">{{ block.settings.ai_reason }}</p>
                    
                    <div class="ai-product-tags">
                      {% if block.settings.tag_1 != blank %}
                        <span class="ai-tag">{{ block.settings.tag_1 }}</span>
                      {% endif %}
                      {% if block.settings.tag_2 != blank %}
                        <span class="ai-tag">{{ block.settings.tag_2 }}</span>
                      {% endif %}
                      {% if block.settings.tag_3 != blank %}
                        <span class="ai-tag">{{ block.settings.tag_3 }}</span>
                      {% endif %}
                    </div>
                  </div>
                </div>
            {% endcase %}
          {% endfor %}
        </div>
      </div>
    </div>

    <div class="ai-insights">
      <div class="ai-insight-card">
        <div class="ai-insight-icon">üìä</div>
        <h4 class="ai-insight-title">Preference Analysis</h4>
        <div class="ai-insight-value" data-count="87">0</div>
        <p class="ai-insight-desc">Data points analyzed to understand your taste</p>
      </div>
      
      <div class="ai-insight-card">
        <div class="ai-insight-icon">üéØ</div>
        <h4 class="ai-insight-title">Recommendation Accuracy</h4>
        <div class="ai-insight-value" data-count="99">0%</div>
        <p class="ai-insight-desc">Success rate of AI predictions</p>
      </div>
      
      <div class="ai-insight-card">
        <div class="ai-insight-icon">‚ö°</div>
        <h4 class="ai-insight-title">Response Time</h4>
        <div class="ai-insight-value">0.3s</div>
        <p class="ai-insight-desc">Real-time AI processing speed</p>
      </div>
    </div>
  </div>
</section>

<script>
  // Neural network visualization
  (function() {
    const canvas = document.getElementById('neural-{{ section.id }}');
    const ctx = canvas.getContext('2d');
    
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const nodes = [];
    const connections = [];
    
    // Create neural network nodes
    for (let layer = 0; layer < 4; layer++) {
      const nodesInLayer = Math.floor(Math.random() * 3) + 4;
      const layerNodes = [];
      
      for (let i = 0; i < nodesInLayer; i++) {
        layerNodes.push({
          x: (canvas.width / 5) * (layer + 1),
          y: (canvas.height / (nodesInLayer + 1)) * (i + 1),
          vx: (Math.random() - 0.5) * 0.2,
          vy: (Math.random() - 0.5) * 0.2,
          active: Math.random() > 0.5
        });
      }
      
      nodes.push(layerNodes);
    }
    
    // Create connections between layers
    for (let i = 0; i < nodes.length - 1; i++) {
      for (let j = 0; j < nodes[i].length; j++) {
        for (let k = 0; k < nodes[i + 1].length; k++) {
          if (Math.random() > 0.3) {
            connections.push({
              from: nodes[i][j],
              to: nodes[i + 1][k],
              strength: Math.random()
            });
          }
        }
      }
    }
    
    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      // Draw connections
      connections.forEach(conn => {
        ctx.beginPath();
        ctx.moveTo(conn.from.x, conn.from.y);
        ctx.lineTo(conn.to.x, conn.to.y);
        ctx.strokeStyle = `rgba(212, 175, 55, ${conn.strength * 0.3})`;
        ctx.lineWidth = conn.strength * 2;
        ctx.stroke();
      });
      
      // Draw nodes
      nodes.forEach(layer => {
        layer.forEach(node => {
          // Update position slightly
          node.x += node.vx;
          node.y += node.vy;
          
          // Bounce off edges
          if (node.x < 50 || node.x > canvas.width - 50) node.vx = -node.vx;
          if (node.y < 50 || node.y > canvas.height - 50) node.vy = -node.vy;
          
          // Draw node
          ctx.beginPath();
          ctx.arc(node.x, node.y, node.active ? 8 : 5, 0, Math.PI * 2);
          ctx.fillStyle = node.active ? '#D4AF37' : 'rgba(212, 175, 55, 0.3)';
          ctx.fill();
          
          // Randomly activate/deactivate
          if (Math.random() > 0.98) {
            node.active = !node.active;
          }
        });
      });
      
      requestAnimationFrame(animate);
    }
    
    animate();
    
    // Resize handler
    window.addEventListener('resize', () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
    
    // Animated counters
    document.querySelectorAll('[data-count]').forEach(element => {
      const target = parseInt(element.getAttribute('data-count'));
      const suffix = element.textContent.includes('%') ? '%' : '';
      let current = 0;
      const increment = target / 50;
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        element.textContent = Math.floor(current) + suffix;
      }, 30);
    });
  })();
</script>

{% schema %}
{
  "name": "AI Personalization",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "AI-Powered Shopping Experience"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Your personal AI analyzes preferences to curate the perfect products"
    }
  ],
  "blocks": [
    {
      "type": "ai_product",
      "name": "AI Product Recommendation",
      "settings": [
        {
          "type": "text",
          "id": "product_name",
          "label": "Product Name",
          "default": "Premium Growing Kit"
        },
        {
          "type": "text",
          "id": "product_emoji",
          "label": "Product Emoji",
          "default": "üçÑ"
        },
        {
          "type": "text",
          "id": "match_score",
          "label": "Match Score",
          "default": "98"
        },
        {
          "type": "textarea",
          "id": "ai_reason",
          "label": "AI Reasoning",
          "default": "Based on your interest in gourmet varieties and indoor cultivation"
        },
        {
          "type": "text",
          "id": "tag_1",
          "label": "Tag 1",
          "default": "Beginner Friendly"
        },
        {
          "type": "text",
          "id": "tag_2",
          "label": "Tag 2",
          "default": "High Yield"
        },
        {
          "type": "text",
          "id": "tag_3",
          "label": "Tag 3",
          "default": "Fast Growth"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "AI Personalization",
      "blocks": [
        {
          "type": "ai_product",
          "settings": {
            "product_name": "Lion's Mane Elite",
            "product_emoji": "ü¶Å",
            "match_score": "98",
            "ai_reason": "Based on your interest in cognitive enhancement and gourmet cultivation",
            "tag_1": "Brain Health",
            "tag_2": "Gourmet",
            "tag_3": "Premium"
          }
        },
        {
          "type": "ai_product",
          "settings": {
            "product_name": "Oyster Multi-Pack",
            "product_emoji": "ü¶™",
            "match_score": "95",
            "ai_reason": "Perfect for your preference for variety and bulk growing",
            "tag_1": "Variety Pack",
            "tag_2": "Best Value",
            "tag_3": "Easy Grow"
          }
        },
        {
          "type": "ai_product",
          "settings": {
            "product_name": "Shiitake Professional",
            "product_emoji": "üåø",
            "match_score": "92",
            "ai_reason": "Matches your advanced skill level and quality focus",
            "tag_1": "Advanced",
            "tag_2": "Restaurant Quality",
            "tag_3": "Traditional"
          }
        },
        {
          "type": "ai_product",
          "settings": {
            "product_name": "Cordyceps Power",
            "product_emoji": "‚ö°",
            "match_score": "89",
            "ai_reason": "Aligns with your wellness goals and rare variety interests",
            "tag_1": "Energy Boost",
            "tag_2": "Rare Species",
            "tag_3": "Medicinal"
          }
        }
      ]
    }
  ]
}
{% endschema %}

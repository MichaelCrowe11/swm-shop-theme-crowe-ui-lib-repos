{%- comment -%}
üñ§ Southwest Mushrooms Seamless Product Card
Professional monochrome design with glass morphism
{%- endcomment -%}

<style>
/* üñ§ Seamless Product Card Design */
.seamless-product-card {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.02) 0%,
    rgba(0, 0, 0, 0.95) 50%,
    rgba(255, 255, 255, 0.01) 100%
  );
  backdrop-filter: blur(20px) saturate(1.5);
  -webkit-backdrop-filter: blur(20px) saturate(1.5);
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 16px;
  padding: 0;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  position: relative;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.seamless-product-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, 
    transparent 0%,
    rgba(255, 255, 255, 0.005) 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.003) 75%,
    transparent 100%
  );
  pointer-events: none;
  z-index: 1;
}

.seamless-product-card:hover {
  transform: translateY(-6px) scale(1.01);
  box-shadow: 
    0 16px 40px rgba(0, 0, 0, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.15);
}

/* üñºÔ∏è Image Container */
.product-image-container {
  position: relative;
  overflow: hidden;
  border-radius: 12px 12px 0 0;
  height: 240px;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.03) 0%,
    rgba(0, 0, 0, 0.8) 100%
  );
}

.product-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: all 0.4s ease;
  filter: contrast(1.1) saturate(0.9) brightness(1.1);
}

.seamless-product-card:hover .product-image {
  transform: scale(1.05);
  filter: contrast(1.2) saturate(1.0) brightness(1.15);
}

/* üè∑Ô∏è Professional Badges */
.product-badges {
  position: absolute;
  top: 12px;
  left: 12px;
  right: 12px;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  z-index: 3;
}

.badge {
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 10px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  backdrop-filter: blur(15px);
  border: 1px solid;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  color: #ffffff;
}

.badge-organic {
  background: rgba(0, 0, 0, 0.8);
  border-color: rgba(255, 255, 255, 0.2);
}

.badge-premium {
  background: rgba(255, 255, 255, 0.9);
  border-color: rgba(255, 255, 255, 0.3);
  color: #000000;
}

.badge-difficulty {
  font-size: 9px;
  padding: 4px 8px;
}

.badge-beginner {
  background: rgba(0, 0, 0, 0.8);
  border-color: rgba(255, 255, 255, 0.15);
}

.badge-intermediate {
  background: rgba(40, 40, 40, 0.9);
  border-color: rgba(255, 255, 255, 0.2);
}

.badge-advanced {
  background: rgba(60, 60, 60, 0.9);
  border-color: rgba(255, 255, 255, 0.25);
}

/* üíé Product Info Section */
.product-info {
  padding: 24px;
  position: relative;
  z-index: 2;
}

.product-title {
  font-size: 18px;
  font-weight: 600;
  color: #ffffff;
  margin-bottom: 8px;
  line-height: 1.3;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.product-title a {
  color: inherit;
  text-decoration: none;
  transition: all 0.3s ease;
}

.product-title a:hover {
  color: rgba(255, 255, 255, 0.9);
  text-shadow: 0 0 15px rgba(255, 255, 255, 0.3);
}

.product-price {
  font-size: 20px;
  font-weight: 700;
  color: #ffffff;
  margin-bottom: 16px;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.compare-price {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.5);
  text-decoration: line-through;
  margin-left: 8px;
}

/* üåø Cultivation Metafields Grid */
.cultivation-info {
  margin: 16px 0 20px;
}

.cultivation-title {
  font-size: 11px;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.8);
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 12px;
}

.cultivation-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px;
}

.cultivation-item {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  padding: 8px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.cultivation-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  transition: left 0.5s ease;
}

.seamless-product-card:hover .cultivation-item::before {
  left: 100%;
}

.cultivation-item:hover {
  background: rgba(255, 255, 255, 0.04);
  border-color: rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.cultivation-icon {
  width: 14px;
  height: 14px;
  margin-bottom: 4px;
  filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.2));
  color: rgba(255, 255, 255, 0.8);
}

.cultivation-label {
  font-size: 9px;
  color: rgba(255, 255, 255, 0.6);
  text-transform: uppercase;
  letter-spacing: 0.3px;
  margin-bottom: 2px;
}

.cultivation-value {
  font-size: 11px;
  font-weight: 600;
  color: #ffffff;
}

/* üõí Action Buttons */
.product-actions {
  display: flex;
  gap: 12px;
  margin-top: 20px;
}

.btn-primary {
  flex: 1;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.9) 0%,
    rgba(240, 240, 240, 0.8) 100%
  );
  border: 1px solid rgba(255, 255, 255, 0.3);
  color: #000000;
  padding: 12px 20px;
  border-radius: 10px;
  font-weight: 600;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  box-shadow: 
    0 4px 15px rgba(255, 255, 255, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
  position: relative;
  overflow: hidden;
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  transition: left 0.5s ease;
}

.btn-primary:hover::before {
  left: 100%;
}

.btn-primary:hover {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 1) 0%,
    rgba(250, 250, 250, 0.9) 100%
  );
  box-shadow: 
    0 6px 20px rgba(255, 255, 255, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.4);
  transform: translateY(-2px);
}

.btn-secondary {
  width: 48px;
  height: 48px;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.btn-secondary:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
}

.btn-secondary svg {
  width: 18px;
  height: 18px;
  stroke: rgba(255, 255, 255, 0.8);
  transition: all 0.3s ease;
}

.btn-secondary:hover svg {
  transform: scale(1.1);
  stroke: #ffffff;
  filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.3));
}

/* ‚ö° Loading States */
.btn-loading {
  pointer-events: none;
  opacity: 0.7;
}

.btn-loading::after {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-top: 2px solid #000000;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes spin {
  0% { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* üì± Responsive Design */
@media (max-width: 768px) {
  .seamless-product-card {
    border-radius: 12px;
  }
  
  .product-image-container {
    height: 200px;
    border-radius: 8px 8px 0 0;
  }
  
  .product-info {
    padding: 20px;
  }
  
  .cultivation-grid {
    grid-template-columns: 1fr;
    gap: 6px;
  }
  
  .product-actions {
    flex-direction: column;
    gap: 8px;
  }
  
  .btn-secondary {
    width: 100%;
    height: 44px;
  }
}

/* üéØ Accessibility Enhancements */
.seamless-product-card:focus-within {
  outline: 2px solid rgba(255, 255, 255, 0.3);
  outline-offset: 2px;
}

.btn-primary:focus,
.btn-secondary:focus {
  outline: 2px solid rgba(255, 255, 255, 0.5);
  outline-offset: 2px;
}

/* üåü Premium Effects */
.seamless-product-card.featured {
  border-color: rgba(255, 255, 255, 0.15);
  box-shadow: 
    0 12px 40px rgba(0, 0, 0, 0.5),
    0 0 30px rgba(255, 255, 255, 0.05),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.seamless-product-card.featured::after {
  content: '';
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(45deg, 
    rgba(255, 255, 255, 0.1),
    transparent,
    rgba(255, 255, 255, 0.05),
    transparent
  );
  border-radius: 16px;
  z-index: -1;
  animation: shimmer 3s ease-in-out infinite;
}

@keyframes shimmer {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}
</style>

<!-- Seamless Product Card -->
<article class="seamless-product-card {{ product_class | default: '' }}">
  <!-- Product Image with Professional Overlay -->
  <div class="product-image-container">
    {%- if product.featured_media -%}
      <img 
        src="{{ product.featured_media | image_url: width: 400 }}"
        alt="{{ product.featured_media.alt | escape }}"
        class="product-image"
        loading="lazy"
        width="400"
        height="240"
      />
    {%- else -%}
      <div class="product-image product-image-placeholder">
        <svg viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect width="100" height="100" fill="rgba(255,255,255,0.1)"/>
          <path d="M30 70L50 50L70 70M40 60L50 50L60 60" stroke="rgba(255,255,255,0.3)" stroke-width="2"/>
        </svg>
      </div>
    {%- endif -%}
    
    <!-- Professional Badges -->
    <div class="product-badges">
      <div class="badges-left">
        {%- if product.metafields.custom.organic -%}
          <span class="badge badge-organic">Organic</span>
        {%- endif -%}
        
        {%- if product.metafields.custom.premium -%}
          <span class="badge badge-premium">Premium</span>
        {%- endif -%}
      </div>
      
      <div class="badges-right">
        {%- if product.metafields.cultivation.difficulty -%}
          {%- assign difficulty = product.metafields.cultivation.difficulty | downcase -%}
          <span class="badge badge-difficulty badge-{{ difficulty }}">
            {{ product.metafields.cultivation.difficulty }}
          </span>
        {%- endif -%}
      </div>
    </div>
  </div>
  
  <!-- Product Information -->
  <div class="product-info">
    <!-- Title and Price -->
    <h3 class="product-title">
      <a href="{{ product.url }}">{{ product.title | escape }}</a>
    </h3>
    
    <div class="product-price">
      {{ product.price | money }}
      {%- if product.compare_at_price > product.price -%}
        <span class="compare-price">{{ product.compare_at_price | money }}</span>
      {%- endif -%}
    </div>
    
    <!-- Enhanced Cultivation Metafields -->
    {%- if product.metafields.cultivation -%}
      <div class="cultivation-info">
        <div class="cultivation-title">Growing Specs</div>
        <div class="cultivation-grid">
          
          {%- if product.metafields.cultivation.temperature -%}
            <div class="cultivation-item">
              <div class="cultivation-icon">üå°Ô∏è</div>
              <div class="cultivation-label">Temp</div>
              <div class="cultivation-value">{{ product.metafields.cultivation.temperature }}</div>
            </div>
          {%- endif -%}
          
          {%- if product.metafields.cultivation.humidity -%}
            <div class="cultivation-item">
              <div class="cultivation-icon">üíß</div>
              <div class="cultivation-label">Humidity</div>
              <div class="cultivation-value">{{ product.metafields.cultivation.humidity }}</div>
            </div>
          {%- endif -%}
          
          {%- if product.metafields.cultivation.growth_time -%}
            <div class="cultivation-item">
              <div class="cultivation-icon">‚è±Ô∏è</div>
              <div class="cultivation-label">Time</div>
              <div class="cultivation-value">{{ product.metafields.cultivation.growth_time }}</div>
            </div>
          {%- endif -%}
          
          {%- if product.metafields.cultivation.yield -%}
            <div class="cultivation-item">
              <div class="cultivation-icon">üìä</div>
              <div class="cultivation-label">Yield</div>
              <div class="cultivation-value">{{ product.metafields.cultivation.yield }}</div>
            </div>
          {%- endif -%}
          
        </div>
      </div>
    {%- endif -%}
    
    <!-- Action Buttons -->
    <div class="product-actions">
      <button 
        class="btn-primary quick-add-btn" 
        data-product-id="{{ product.id }}"
        data-variant-id="{{ product.selected_or_first_available_variant.id }}"
        aria-label="Add {{ product.title }} to cart"
      >
        Add to Cart
      </button>
      
      <button 
        class="btn-secondary wishlist-btn" 
        data-product-id="{{ product.id }}"
        aria-label="Add {{ product.title }} to wishlist"
      >
        <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M20.84 4.61C20.3292 4.099 19.7228 3.69364 19.0554 3.41708C18.3879 3.14052 17.6725 2.99817 16.95 2.99817C16.2275 2.99817 15.5121 3.14052 14.8446 3.41708C14.1772 3.69364 13.5708 4.099 13.06 4.61L12 5.67L10.94 4.61C9.9083 3.5783 8.50903 2.99914 7.05 2.99914C5.59096 2.99914 4.19169 3.5783 3.16 4.61C2.1283 5.64169 1.54914 7.04096 1.54914 8.5C1.54914 9.95903 2.1283 11.3583 3.16 12.39L12 21.23L20.84 12.39C21.351 11.8792 21.7563 11.2728 22.0329 10.6053C22.3095 9.93789 22.4518 9.22248 22.4518 8.5C22.4518 7.77752 22.3095 7.06211 22.0329 6.39467C21.7563 5.72723 21.351 5.1208 20.84 4.61V4.61Z" stroke="currentColor" stroke-width="2" fill="none"/>
        </svg>
      </button>
    </div>
  </div>
</article>

<script>
// üöÄ Enhanced Product Card Interactions
document.addEventListener('DOMContentLoaded', function() {
  
  // Quick Add to Cart functionality
  document.querySelectorAll('.quick-add-btn').forEach(button => {
    button.addEventListener('click', async function(e) {
      e.preventDefault();
      
      const variantId = this.dataset.variantId;
      const productId = this.dataset.productId;
      
      // Add loading state
      this.classList.add('btn-loading');
      this.textContent = 'Adding...';
      
      try {
        const response = await fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: variantId,
            quantity: 1
          })
        });
        
        if (response.ok) {
          // Success feedback
          this.textContent = 'Added!';
          this.style.background = 'linear-gradient(135deg, rgba(200, 255, 200, 0.9) 0%, rgba(180, 255, 180, 0.8) 100%)';
          
          // Update cart count if exists
          const cartCount = document.getElementById('cart-count');
          if (cartCount) {
            const currentCount = parseInt(cartCount.textContent) || 0;
            cartCount.textContent = currentCount + 1;
          }
          
          // Dispatch cart update event
          document.dispatchEvent(new CustomEvent('cart:updated', {
            detail: { item_count: (parseInt(cartCount?.textContent) || 0) + 1 }
          }));
          
          // Reset button after 2 seconds
          setTimeout(() => {
            this.textContent = 'Add to Cart';
            this.style.background = '';
            this.classList.remove('btn-loading');
          }, 2000);
          
        } else {
          throw new Error('Failed to add to cart');
        }
        
      } catch (error) {
        console.error('Error adding to cart:', error);
        this.textContent = 'Try Again';
        this.style.background = 'linear-gradient(135deg, rgba(255, 200, 200, 0.9) 0%, rgba(255, 180, 180, 0.8) 100%)';
        
        setTimeout(() => {
          this.textContent = 'Add to Cart';
          this.style.background = '';
          this.classList.remove('btn-loading');
        }, 2000);
      }
    });
  });
  
  // Wishlist functionality
  document.querySelectorAll('.wishlist-btn').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      
      const productId = this.dataset.productId;
      const isWishlisted = this.classList.contains('wishlisted');
      
      if (isWishlisted) {
        // Remove from wishlist
        this.classList.remove('wishlisted');
        this.querySelector('svg path').setAttribute('fill', 'none');
      } else {
        // Add to wishlist
        this.classList.add('wishlisted');
        this.querySelector('svg path').setAttribute('fill', 'currentColor');
      }
      
      // Store wishlist state in localStorage
      const wishlist = JSON.parse(localStorage.getItem('seamless-wishlist') || '[]');
      if (isWishlisted) {
        const index = wishlist.indexOf(productId);
        if (index > -1) wishlist.splice(index, 1);
      } else {
        if (!wishlist.includes(productId)) wishlist.push(productId);
      }
      localStorage.setItem('seamless-wishlist', JSON.stringify(wishlist));
    });
    
    // Check if product is already in wishlist
    const productId = button.dataset.productId;
    const wishlist = JSON.parse(localStorage.getItem('seamless-wishlist') || '[]');
    if (wishlist.includes(productId)) {
      button.classList.add('wishlisted');
      button.querySelector('svg path').setAttribute('fill', 'currentColor');
    }
  });
});
</script>
